---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: mediawiki_sg
    image: ami-0c322300a1dd5dc79
    keypair: amruta
    region: us-east-1
    count: 2
  vars_files:
    - /etc/ansible/roles/aws_vars.yml

tasks:
 
- name: Create a security group
  ec2_group:
        name: "{{ security_group }}"
        description: The webservers security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
  register: security_group
  

- name: Create the ELB with listening port 80
  ec2_elb_lb:
    name: mediawiki-load-balancer
    state: present
    region: "{{ region }}"
    zones:
      - us-east-1a
      - us-east-1b
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
  register: elb

- name: Launch the new EC2 Instances
  ec2:
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
     group_id:
          - "{{ security_group.group_id }}"
          - "{{ elb.elb.security_group_ids | first }}"
     instance_type: "{{ instance_type }}"
     image: "{{ image }}"
     wait: true 
     region: "{{ region }}"
     keypair: "{{ keypair }}"
     count: "{{count}}"
  register: ec2
	  
- name: Add the newly created instances to hosts file to make connection
  add_host:
        name: "{{ item.public_ip }}"
        groups: lampstack
  with_items: "{{ ec2.instances }}"
	  
- name: Add tag to Instance(s)
  ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
  with_items: "{{ ec2.instances }}"
  args:
    tags:
        Application: Mediawiki
		type: lamp
		
- name: Wait for SSH to come up
  wait_for:
        host: "{{ item.public_ip }}"
        port: 22 
        state: started 
  with_items: "{{ ec2.instances }}"
  
  
- name: Add each EC2 instance to the ELB
  ec2_elb:
        state: present
        ec2_elbs: mediawiki-load-balancer
        region: "{{ region }}"
        instance_id: "{{ item.id }}"
  with_items: "{{ ec2.instances }}"
